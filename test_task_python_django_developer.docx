ТЕСТОВОЕ ЗАДАНИЕ на позицию 
Django backend developer
Задача
Реализовать веб-сервис на базе django, представляющий собой платформу для прохождения тестов. Должны быть реализованы следующие возможности:

    1 Возможность авторизоваться как “Студент” или “Преподаватель”.
    2 Студент
        2.1 Возможность загрузить аватарку и добавить номер телефона.
        2.2 Возможность пройти выбранный тест 
        2.3 Возможность посмотреть результат теста: список правильных и неправильных ответов и оценку (отношение правильных ответов к общему количеству)
        2.4 Возможность посмотреть историю пройденных тестов. 
        2.5 Отправить форму с вопросом учителю(вопрос должен отправляется на почту).
    3 Преподаватель
        3.1 Возможность просмотреть результат теста выбранного студента.
        3.2 Возможность сбросить результат теста для выбранного студента.
        3.3 Ежемесячный отчёт о количестве пройденных тестов Студентами (направляется на почту).
    4 Тесты создаются из панели администратора. Тест имеет вопрос и несколько вариантов ответов, правильный ответ должен быть только один.
    5 Реализован функционал, который раз в день собирает статистику о пройденных тестах и в фоновой задаче посылает email администратору.
    6 Задняя в тестах должны додерживать возможность сортировки
Требования
    1 Данные хранятся в реляционной БД, взаимодействие с ней осуществляется посредством django ORM.
    2 Реализовано разграничение прав доступа к тестам.
    3 Приложение контейнирезировано при помощи docker;
    4 Проект не использует глобальных зависимостей за исключением: python, docker, docker-compose;
    5 Readme проекта описывает весь процесс установки, запуска и работы с сервисом как в среде разработке так и при разворачивании  на сервере;
    6 Требования к фронтенду не предъявляются;
    7 Требования к админке не предъявляются.
Будет плюсом

    1 Вопросы теста предлагаются последовательно.
    2 Реализована удобная навигация и фильтрация объектов в админке.
    3 Используется DRF для ответов на вопросы теста и сбросов результата(как дополнительного функционала).
    4 Модель Тестов покрыта юнит-тестами.
    5 Проект запускается одной командой - docker-compose up.
    6 Сервис django работает на многопоточном WSGI-сервере.
    7 Readme.md содержит информацию о проекте.

Рекомендуемое время выполнения тестового задания: 2-3 дня
